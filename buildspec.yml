version: 0.2

phases:
  install:
    runtime-versions:
      golang: 1.x
  
  pre_build:
    commands:
      - echo "Installing dependencies..."
      - go mod download
      
  build:
    commands:
      - echo "Building Lambda function..."
      - GOOS=linux GOARCH=amd64 go build -o main
      
  post_build:
    commands:
      - echo "Creating deployment package..."
      - zip function.zip main
      - aws lambda update-function-code --function-name ALSCalendarParser --zip-file fileb://function.zip --publish
      - |
        # Create LIVE alias if it doesn't exist, or update it
        LATEST_VERSION=$(aws lambda list-versions-by-function --function-name ALSCalendarParser --query 'Versions[-1].Version' --output text)
        if ! aws lambda get-alias --function-name ALSCalendarParser --name LIVE &> /dev/null; then
          aws lambda create-alias --function-name ALSCalendarParser --name LIVE --function-version $LATEST_VERSION
        else
          aws lambda update-alias --function-name ALSCalendarParser --name LIVE --function-version $LATEST_VERSION
        fi

artifacts:
  files:
    - appspec.yml
    - function.zip
  discard-paths: yes

cache:
  paths:
    - /go/pkg/mod/**/* 